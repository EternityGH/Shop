{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshhd/Desktop/MyReactNative/Shop/screens/shop/ProductDetailScreen.js\";\nimport React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Colors from \"../../constants/Colors\";\nimport * as cartActions from \"../../store/actions/cart\";\n\nvar ProductDetailScreen = function ProductDetailScreen(props) {\n  var navigation = props.navigation,\n      route = props.route;\n  var _route$params = route.params,\n      productId = _route$params.productId,\n      productTitle = _route$params.productTitle;\n  var selectedProduct = useSelector(function (state) {\n    return state.products.availableProducts.find(function (prod) {\n      return prod.id === productId;\n    });\n  });\n  var dispatch = useDispatch();\n  navigation.setOptions({\n    headerTitle: productTitle\n  });\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: selectedProduct.imageUrl\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    color: Colors.primary,\n    title: \"Add to Cart\",\n    onPress: function onPress() {\n      dispatch(cartActions.addToCart(selectedProduct));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: styles.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"$\", selectedProduct.price.toFixed(2)), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, selectedProduct.description));\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    width: '100%',\n    height: 300\n  },\n  actions: {\n    marginVertical: 10,\n    alignItems: 'center'\n  },\n  price: {\n    fontSize: 20,\n    color: '#888',\n    textAlign: 'center',\n    marginVertical: 20,\n    fontFamily: 'open-sans-bold'\n  },\n  description: {\n    fontFamily: 'open-sans',\n    fontSize: 14,\n    textAlign: 'center',\n    marginHorizontal: 20\n  }\n});\nexport default ProductDetailScreen;","map":{"version":3,"sources":["/Users/macintoshhd/Desktop/MyReactNative/Shop/screens/shop/ProductDetailScreen.js"],"names":["React","useSelector","useDispatch","Colors","cartActions","ProductDetailScreen","props","navigation","route","params","productId","productTitle","selectedProduct","state","products","availableProducts","find","prod","id","dispatch","setOptions","headerTitle","styles","image","uri","imageUrl","actions","primary","addToCart","price","toFixed","description","StyleSheet","create","width","height","marginVertical","alignItems","fontSize","color","textAlign","fontFamily","marginHorizontal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AASA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP;AAEA,OAAO,KAAKC,WAAZ;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,KAAK,EAAI;AAAA,MAC7BC,UAD6B,GACRD,KADQ,CAC7BC,UAD6B;AAAA,MACjBC,KADiB,GACRF,KADQ,CACjBE,KADiB;AAAA,sBAEDA,KAAK,CAACC,MAFL;AAAA,MAE5BC,SAF4B,iBAE5BA,SAF4B;AAAA,MAEjBC,YAFiB,iBAEjBA,YAFiB;AAGnC,MAAMC,eAAe,GAAGX,WAAW,CAAC,UAAAY,KAAK;AAAA,WACvCA,KAAK,CAACC,QAAN,CAAeC,iBAAf,CAAiCC,IAAjC,CAAsC,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,KAAYR,SAAhB;AAAA,KAA1C,CADuC;AAAA,GAAN,CAAnC;AAIA,MAAMS,QAAQ,GAAGjB,WAAW,EAA5B;AAEAK,EAAAA,UAAU,CAACa,UAAX,CAAsB;AACpBC,IAAAA,WAAW,EAAEV;AADO,GAAtB;AAGA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEW,MAAM,CAACC,KAArB;AAA4B,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEZ,eAAe,CAACa;AAAvB,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEvB,MAAM,CAACwB,OAAtB;AAA+B,IAAA,KAAK,EAAC,aAArC;AAAmD,IAAA,OAAO,EAAE,mBAAM;AAC9DR,MAAAA,QAAQ,CAACf,WAAW,CAACwB,SAAZ,CAAsBhB,eAAtB,CAAD,CAAR;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACO,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6BjB,eAAe,CAACiB,KAAhB,CAAsBC,OAAtB,CAA8B,CAA9B,CAA7B,CAPF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCnB,eAAe,CAACmB,WAAlD,CARF,CADF;AAYD,CAxBD;;AA4BA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC3BV,EAAAA,KAAK,EAAE;AACLW,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,MAAM,EAAE;AAFH,GADoB;AAK3BT,EAAAA,OAAO,EAAE;AACPU,IAAAA,cAAc,EAAE,EADT;AAEPC,IAAAA,UAAU,EAAE;AAFL,GALkB;AAS3BR,EAAAA,KAAK,EAAE;AACLS,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,SAAS,EAAE,QAHN;AAILJ,IAAAA,cAAc,EAAE,EAJX;AAKLK,IAAAA,UAAU,EAAE;AALP,GAToB;AAgB3BV,EAAAA,WAAW,EAAE;AACXU,IAAAA,UAAU,EAAE,WADD;AAEXH,IAAAA,QAAQ,EAAE,EAFC;AAGXE,IAAAA,SAAS,EAAE,QAHA;AAIXE,IAAAA,gBAAgB,EAAE;AAJP;AAhBc,CAAlB,CAAf;AAwBA,eAAerC,mBAAf","sourcesContent":["import React from 'react';\nimport {\n  ScrollView,\n  View,\n  Text,\n  Image,\n  Button,\n  StyleSheet\n} from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Colors from '../../constants/Colors';\n\nimport * as cartActions from '../../store/actions/cart';\n\nconst ProductDetailScreen = props => {\nconst { navigation, route} = props;\n  const {productId, productTitle} = route.params\n  const selectedProduct = useSelector(state =>\n    state.products.availableProducts.find(prod => prod.id === productId)\n  );\n\n  const dispatch = useDispatch();\n\n  navigation.setOptions({\n    headerTitle: productTitle\n  });\n  return (\n    <ScrollView>\n      <Image style={styles.image} source={{ uri: selectedProduct.imageUrl }} />\n      <View style={styles.actions}>\n        <Button color={Colors.primary} title=\"Add to Cart\" onPress={() => {\n            dispatch(cartActions.addToCart(selectedProduct));\n        }} />\n      </View>\n      <Text style={styles.price}>${selectedProduct.price.toFixed(2)}</Text>\n      <Text style={styles.description}>{selectedProduct.description}</Text>\n    </ScrollView>\n  );\n};\n\n\n\nconst styles = StyleSheet.create({\n      image: {\n        width: '100%',\n        height: 300\n      },\n      actions: {\n        marginVertical: 10,\n        alignItems: 'center'\n      },\n      price: {\n        fontSize: 20,\n        color: '#888',\n        textAlign: 'center',\n        marginVertical: 20,\n        fontFamily: 'open-sans-bold'\n      },\n      description: {\n        fontFamily: 'open-sans',\n        fontSize: 14,\n        textAlign: 'center',\n        marginHorizontal: 20\n      }\n});\n\nexport default ProductDetailScreen;\n"]},"metadata":{},"sourceType":"module"}